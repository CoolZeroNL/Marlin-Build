name: Build Marlin Firmware

on:
  push:
    branches:
      - main
    # paths:
    #   - 'configuration/*/*/**.h'

jobs:

# https://github.com/actions/create-release/issues/14

  build_and_push:
    name: Build Marlin
    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v3

    - name: Select Python 3.7
      uses: actions/setup-python@v3
      with:
        python-version: '3.7'     # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64'       # optional x64 or x86. Defaults to x64 if not specified 

    - name: Install PlatformIO
      run: |
        pip install -U platformio
        pio upgrade --dev
        pio pkg update --global

    - name: Build
      run: |
        bash .github/workflows/build.sh

    - name: Push firmware
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Compiled firmware"
        git push

  # create_release:
  #   name: Create release
  #   needs: build_and_push
  #   runs-on: ubuntu-latest
  #   outputs:
  #     upload_url: ${{ steps.create_release.outputs.upload_url }}
  #     upload_id: ${{ steps.create_release.outputs.id }}
  #   steps:
  #     - name: Create release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         name: Release ${{ github.ref_name }}
  #         allowUpdates: true
  #         tag: ${{ github.ref_name }}
  #         commit: main
  #         replacesArtifacts: true

  publish:
    name: publish
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create release
        run: |
          echo ""

          githubref=$GITHUB_ref
          echo "$githubref" 

          function upload_assest(){

            local _PATH="$1"
            local machinename=`echo "$_PATH" | cut -d'/' -f 3`

            # set -x
            assets=()
            for asset in $_PATH/*/*; do
                assets+=("-a" "$asset")
            done

            echo "Show"
            hub release -f "%T (%S) %n" --include-drafts

            echo "Delete"
            hub release -f "%T (%S) %n" --include-drafts | grep "${githubref##*/}-$machinename" | awk '{print $1}' | xargs -t -n1 hub release delete

            echo "Create"
            hub release create -m ${githubref##*/}-$machinename ${githubref##*/}-$machinename

            echo "Upload assets"
            hub release edit "${assets[@]}" -m "${githubref##*/}" "${githubref##*/}-$machinename"   # specify tag name not the github.ref here.

          }

          find ./compiled/* -prune -type d | while IFS= read -r machine; do

            # Get name of machine
            machinename=`echo "$machine" | cut -d'/' -f 3`
            echo "Getting Configuration for: $machinename"

              echo $machine
              upload_assest $machine

          done
        env:
          GITHUB_ref: ${{ github.ref }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}



#  releases

    # machine - 2.0.5
      # files

    # machine - bugfix-2.1.x

      # files